name: pelican-build

on:
  push:
    branches: [ main ]
  schedule:
    - cron: "0 * * * *"     # hourly (UTC)
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      HF_API_TOKEN: ${{ secrets.HF_API_TOKEN }}   # add this secret in repo settings
      HF_MODEL: google/flan-t5-base           # optional; can omit (this is the default)

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          python -c "import pelican; print('Pelican version:', pelican.__version__)"

      - name: Ensure content exists (debug)
        run: |
          ls -la
          ls -la content || true

      - name: Generate hourly post
        run: python scripts/run_pipeline.py

      - name: 'Debug: list generated posts'
        run: |
          echo "Markdown files under content/:"
          find content -maxdepth 3 -type f -name "*.md" -print
          echo "Seen list (if any):"
          test -f content/data/seen.json && tail -n +1 content/data/seen.json || echo "no seen.json yet"

      # âœ… commit first, then rebase, then push
      - name: Commit & push generated posts (rebase-safe)
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # Stage generated files and seen list (if present)
          git add content/posts/*.md || true
          git add content/data/seen.json || true

          # If nothing staged, exit quietly
          if git diff --cached --quiet; then
            echo "No new files to commit."
          else
            git commit -m "chore(posts): hourly post + seen list [skip ci]"
            # Rebase on latest remote, then push
            git fetch origin main
            git -c rebase.autoStash=true pull --rebase origin main
            git push origin HEAD:main
          fi

      - name: Build site with Pelican
        run: |
          export PYTHONPATH="$GITHUB_WORKSPACE"
          pelican content -s publishconf.py -o output

      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./output

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
