name: Generate daily post

on:
  workflow_dispatch:
  schedule:
    # Run every day at 07:00 UTC (adjust as needed)
    - cron: "0 7 * * *"

permissions:
  contents: write

jobs:
  daily:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Ensure candidate pool exists (build if missing)
      - name: Ensure candidate pool (quick harvest if missing)
        run: |
          set -euxo pipefail
          POOL="content/data/candidate_pool.json"
          if [ ! -s "$POOL" ]; then
            echo "[daily] No candidate pool found — running a quick harvest…"
            python -m app.main --harvest \
              --min-reviews 80 \
              --max-apps 1500 \
              --batch-size 20 \
              --wait-s 2.0
          else
            echo "[daily] Found $POOL"
          fi

      - name: Validate candidate pool exists
        run: |
          test -s content/data/candidate_pool.json || (echo "candidate_pool.json still missing after quick harvest" >&2; exit 1)

      - name: Generate daily post
        run: |
          python -m app.main --daily

      # <- NEW: always touch a tiny stamp file so there is a change to commit
      - name: Write run stamp (forces a commit)
        run: |
          mkdir -p content/data
          date -u +"%Y-%m-%dT%H:%M:%SZ" > content/data/.daily-last-run.txt

      # Optional: show what changed (handy for debugging)
      - name: Show changed files (debug)
        run: |
          git status --porcelain || true
          ls -la content/posts || true
          ls -la content/data || true

      - name: Commit & push updates (if any)
        run: |
          set -euxo pipefail
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Stage everything (post, data, stamp)
          git add -A

          # If there are staged changes, commit them; otherwise make a tiny empty commit
          if ! git diff --cached --quiet; then
            git commit -m "chore(daily): update generated content"
          else
            echo "No file diffs detected — creating an empty commit to trigger deploy."
            git commit --allow-empty -m "chore(daily): trigger deploy"
          fi

          # Rebase to avoid non-fast-forward push issues, then push
          git pull --rebase origin "${GITHUB_REF_NAME}"
          git push
